/*
 * File: app/controller/PlacesController.js
 *
 * This file was generated by Sencha Architect version 3.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.1.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PlacesApp.controller.PlacesController', {
    extend: 'Ext.app.Controller',

    config: {
        control: {
            "placescontainer searchfield": {
                keyup: 'onSearchfieldKeyup'
            }
        }
    },

    onSearchfieldKeyup: function(textfield, e, eOpts) {
        var me = this;
        if (!me.task) {

            me.geo = Ext.create('Ext.util.Geolocation', {
                autoUpdate: false,
                listeners: {
                    locationupdate: function(geo) {
                        var store = Ext.data.StoreManager.lookup('PlacesStore');

                        // our url is getJson.php, however we need to add some parameters to this url
                        var params = {
                            key: 'enter key here',
                            location: geo.getLatitude()+','+geo.getLongitude(),
                            radius: '10000',
                            keyword: textfield.getValue(),
                            sensor: true
                        };

                        store.load({
                            url: 'getJson.php?key=' + params.key
                            + '&location=' + params.location
                            + '&radius=' + params.radius
                            + '&sensor=' + params.sensor
                            + '&keyword=' + params.keyword,

                            callback: function(records, operation, success) {
                                //alert('loaded records: ' + success);
                            },

                            scope: this
                        });
                    }
                }
            });

            me.task = Ext.create('Ext.util.DelayedTask', function() {
        		me.geo.updateLocation();
            });
        }

        me.task.delay(500);
    }

});